#lang racket
;part 1
(cons '3 '(4))
(cons '1 '(2 3))
(cons 'a '((b c)))
(cons '1 '())
(cons '2 ' ((3(4))))

;part 2
(define L '(1 2 3 4 5))
(define LL '(1(2 3 4)(5)))

(car L)
(cadr L)
(caddr L)
(cadddr L)
(caddr(cdr( L))

(caadr LL)


;(define Q '(1 2(a 3 4 5)))
;(define (quizAnswer list) (cdr(list)))
;(quizAnswer Q)